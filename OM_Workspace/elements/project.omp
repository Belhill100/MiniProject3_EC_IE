; OM File Header - Saved 2024/09/26 21:22:24
; (7.03 :patc (om-make-point 112 22) (om-make-point 275 202) (om-make-point 1841 953) "" 183 0 "2024/09/25 10:06:49" "2024/09/26 21:22:24")
; End File Header
; External resources 
; (list (list (quote :abstraction) "#P\"LispFunction 2.oml\"" "#P\"LispFunction.oml\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "project" (quote ((let ((box (om-load-boxcall (quote patch-box) "LispFunction 8" (quote ("elements" "LispFunction 2")) (quote ((om-load-inputfun (quote input-funbox) "" "LISTAS" nil))) (om-make-point 903 182) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N 6" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 25))) (om-make-point 1053 198) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ 3" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 881 455) (om-make-point 100 70) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600) (5400) (4600) (5400) (5600))) :lonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60850)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1) (4500) (4500) (-1) (-1))) :lonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60850)) :ldur (quotelvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quotelonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45850)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale onset measure)) (list 2 24 (list (quote g) (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (2 2 2))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 1013 769) (om-make-point 302 99) 0 1 (quote :normal) (quote t) nil 0 1)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "LispFunction 7" (quote ("elements" "LispFunction")) (quote ((om-load-inputfun (quote input-funbox) "" "ONE" nil) (om-load-inputfun (quote input-funbox) "" "TWO" nil) (om-load-inputfun (quote input-funbox) "" "THREE" nil))) (om-make-point 866 369) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 7" (quote list) (quote nil) (om-make-point 972 147) (om-make-point 382 28) (list 5000 4700 5800 5100 6000 4500 5800 4800 6000 4300 5200 5600 5200) "(5000 4700 5800 5100 6000 4500 5800 4800 6000 4300 5200 5600 5200)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ 6" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 5000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 500)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 9)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 900 266) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200))) :lonset (quote (0 500 1000 1500 2000 2500 3000 3500 4000 4500 5000 5500 6000 6500 7000 7500 8000 8500 9000 9500 10000 10500 11000 11500 12000 12500 13000 13500 14000 14500 15000 15500 16000 16500 17000 17500 18000 18500 19000 19500 20000 20500 21000 21500 22000 22500 23000 23500 24000 24500 25000 25500 26000 26500 27000 27500 28000 28500 29000 29500 30000 30500 31000 31500 32000 32500 33000 33500 34000 34500 35000 35500 36000 36500 37000 37500 38000 38500 39000 39500 40000 40500 41000 41500 42000 42500 43000 43500 44000 44500 45000 45500 46000 46500 47000 47500 48000 48500 49000 49500 50000 50500 51000 51500 52000 52500 53000 53500 54000 54500 55000 55500 56000 56500 57000 57500 58000 58500 59000 59500 60000 60500 61000 61500 62000 62500 63000 63500 64000 64500 65000 65500 66000 66500 67000 67500 68000 68500 69000 69500 70000 70500 71000 71500 72000 72500 73000 73500 74000 74500 75000 75500 76000 76500 77000 77500 78000 78500 79000 79500 80000 80500 81000 81500 82000 82500 83000 83500 84000 84500 85000 85500 86000 86500 87000 87500 88000 88500 89000 89500 90000 90500 91000 91500 92000 92500 93000 93500 94000 94500 95000 95500 96000 96500 97000 97500 98000 98500 99000 99500 100000 100500 101000 101500 102000 102500 103000 103500 104000 104500 105000 105500 106000 106500 107000 107500 108000 108500 109000 109500 110000 110500 111000 111500 112000 112500 113000 113500 114000 114500 115000 115500 116000 116500 117000 117500 118000 118500 119000 119500 120000 120500 121000 121500 122000 122500 123000 123500 124000 124500 125000 125500 126000 126500 127000 127500 128000 128500 129000 129500 130000 130500 131000 131500 132000 132500 133000 133500 134000 134500 135000 135500 136000 136500 137000 137500 138000 138500 139000 139500 140000 140500 141000 141500 142000 142500 143000 143500 144000 144500 145000 145500 146000 146500 147000 147500 148000 148500 149000 149500 150000 150500 151000 151500 152000 152500 153000 153500 154000 154500 155000 155500 156000 156500 157000 157500 158000 158500 159000 159500 160000 160500 161000 161500 162000 163000)) :ldur (quotelvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9))) :legato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale onset measure)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote :normal) (quote t) nil 0 1)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "LispFunction 5" (quote ("elements" "LispFunction 2")) (quote ((om-load-inputfun (quote input-funbox) "" "LISTAS" nil))) (om-make-point 37 252) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N 2" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 50))) (om-make-point 74 125) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-BOX" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 1065 66) (om-make-point 499 68) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 471 44) " MIDI MIXER 118(Valor 2) tambor - 47(Valor 3) Timpani - 30(Valor 4) Distorted Guitar Valor 5(10) Valor 6(103)" :font (om-make-font "Verdana" 11.25 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 20" (quote list) (quote nil) (om-make-point 1251 648) (om-make-point 16 28) 4 "4" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 8" (quote list) (quote nil) (om-make-point 1170 660) (om-make-point 58 28) (list 0 150) "(0 150)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "LispFunction 6" (quote ("elements" "LispFunction 2")) (quote ((om-load-inputfun (quote input-funbox) "" "LISTAS" nil))) (om-make-point 1060 680) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N 5" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 100))) (om-make-point 1056 623) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 220 552) (om-make-point 138 28) (list 7400 6600 7400 8300) "(7400 6600 7400 8300)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ 2" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 832 832) (om-make-point 100 70) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quotelonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60850)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quotelonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60850)) :ldur (quotelvel (quoteloffset (quotelchan (quote ((3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3) (3))) :legato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quotelonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45850)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale onset measure)) (list 2 24 (list (quote g) (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (2 2 2))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 1013 769) (om-make-point 302 99) 0 1 (quote :normal) (quote t) nil 0 1)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "LispFunction 4" (quote ("elements" "LispFunction")) (quote ((om-load-inputfun (quote input-funbox) "" "ONE" nil) (om-load-inputfun (quote input-funbox) "" "TWO" nil) (om-load-inputfun (quote input-funbox) "" "THREE" nil))) (om-make-point 858 763) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 19" (quote list) (quote nil) (om-make-point 958 591) (om-make-point 26 28) 3 "3" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 18" (quote list) (quote nil) (om-make-point 871 594) (om-make-point 58 28) (list 0 150) "(0 150)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ 5" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 815 624) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quotelonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60850)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale onset measure)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 766 239) (om-make-point 400 21) 0 1 (quote :normal) (quote t) nil 0 1)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "LispFunction 3" (quote ("elements" "LispFunction 2")) (quote ((om-load-inputfun (quote input-funbox) "" "LISTAS" nil))) (om-make-point 760 552) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N 3" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 100))) (om-make-point 799 497) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 17" (quote list) (quote nil) (om-make-point 427 532) (om-make-point 138 28) (list 5400 4600 5400 5600) "(5400 4600 5400 5600)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "LispFunction 2" (quote ("elements" "LispFunction 2")) (quote ((om-load-inputfun (quote input-funbox) "" "LISTAS" nil))) (om-make-point 456 653) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N 4" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 100))) (om-make-point 475 578) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 16" (quote list) (quote nil) (om-make-point 713 460) (om-make-point 112 28) (list 4500 4500 -1 -1) "(4500 4500 -1 -1)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 14" (quote list) (quote nil) (om-make-point 222 149) (om-make-point 16 28) 3 "3" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 13" (quote list) (quote nil) (om-make-point 786 163) (om-make-point 26 28) 8 "8" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 12" (quote list) (quote nil) (om-make-point 671 165) (om-make-point 58 28) (list 0 150) "(0 150)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 11" (quote list) (quote nil) (om-make-point 650 82) (om-make-point 38 28) 400 "400" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 10" (quote list) (quote nil) (om-make-point 568 28) (om-make-point 44 28) 7000 "7000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 9" (quote list) (quote nil) (om-make-point 485 33) (om-make-point 44 28) 6000 "6000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM-RANDOM" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 4600) (om-load-inputfun (quote input-funbox) "max" "HIGH" 6300))) (om-make-point 517 89) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ 4" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 729 229) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6773) (6084) (6783) (6364) (6067) (6821) (6328) (6591) (6313) (6980) (6862) (6401) (6053) (6089) (6748) (6623) (6621) (6662) (6909) (6448) (6227) (6155) (6778) (6762) (6811) (6469) (6752) (6159) (6720) (6658) (6268) (6063) (6717) (6167) (6044) (6660) (6510) (6082) (6219) (6475) (6388) (6456) (6587) (6947) (6507) (6589) (6245) (6678) (6992) (6065) (6886) (6143) (6343) (6152) (6193) (6158) (6307) (6766) (6727) (6688) (6410) (6167) (6788) (6367) (6317) (6988) (6357) (6596) (6694) (6868) (6656) (6653) (6974) (6333) (6728) (6498) (6930) (6312) (6326) (6133) (6875) (6243) (6765) (6425) (6793) (6208) (6083) (6842) (6389) (6016) (6463) (6776) (6444) (6130) (6398) (6787) (6277) (6674) (6362) (6876) (6557) (6003) (6124) (6940) (6486) (6265) (6768) (6302) (6401) (6241) (6506) (6154) (6743) (6508) (6185) (6969) (6918) (6765) (6103) (6622) (6030) (6958) (6569) (6424) (6016) (6134) (6270) (6819) (6993) (6623) (6589) (6713) (6925) (6639) (6386) (6343) (6272) (6610) (6761) (6483) (6205) (6302) (6010) (6046) (6420) (6344) (6225) (6146) (6532) (6056) (6453) (6666) (6985) (6464) (6269) (6285) (6120) (6325) (6829) (6537) (6735) (6062) (6884) (6804) (6165) (6522) (6146) (6285) (6887) (6551) (6421) (6296) (6517) (6074) (6053) (6299) (6390) (6050) (6301) (6254) (6595) (6647) (6887) (6715) (6008) (6954) (6728) (6804) (6908) (6489) (6915) (6496) (6311) (6904) (6859) (6176) (6084) (6099) (6076) (6091) (6633) (6447) (6143) (6008) (6099) (6910) (6699) (6830) (6580) (6012) (6281) (6590) (6317) (6809) (6588) (6731) (6144) (6662) (6341) (6606) (6603) (6361) (6978) (6183) (6868) (6797) (6525) (6531) (6963) (6355) (6219) (6988) (6313) (6535) (6542) (6321) (6695) (6302) (6739) (6455) (6389) (6502) (6871) (6091) (6275) (6831) (6852) (6128) (6655) (6701) (6615) (6419) (6431) (6668) (6978) (6117) (6678) (6550) (6420) (6604) (6358) (6568) (6034) (6759) (6783) (6460) (6408) (6083) (6776) (6940) (6272) (6316) (6399) (6578) (6021) (6149) (6002) (6518) (6342) (6474) (6432) (6951) (6924) (6713) (6144) (6379) (6071) (6317) (6001) (6729) (6135) (6077) (6035) (6727) (6062) (6901) (6806) (6470) (6782) (6190) (6727) (6470) (6128) (6490) (6923) (6700) (6501) (6169) (6714) (6546) (6352) (6909) (6506) (6096) (6793) (6603) (6118) (6821) (6683) (6265) (6878) (6865) (6966) (6666) (6742) (6802) (6889) (6858) (6078) (6007) (6171) (6231) (6888) (6183) (6340) (6814) (6019) (6863) (6104) (6497) (6249) (6357) (6624) (6964) (6357) (6042) (6058) (6826) (6221) (6789) (6663) (6548) (6789) (6361) (6315) (6357) (6669) (6830) (6093) (6076) (6363) (6273) (6568) (6795) (6066) (6532) (6827) (6453) (6835) (6661) (6944) (6399) (6829) (6285) (6783) (6653) (6326) (6338) (6456) (6470) (6075) (6951) (6154) (6370) (6444) (6156) (6682) (6249) (6229) (6640) (6472) (6054) (6122) (6798) (6648) (6185) (6909) (6103) (6367) (6726))) :lonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60850)) :ldur (quotelvel (quote ((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100))) :loffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 7.03 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (measure onset scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 1 0 nil (quote t) (quote :normal) 1 0 (om-make-point 400 20) (om-make-point 963 393) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 28 2)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 50))) (om-make-point 601 135) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 479 412) (om-make-point 100 70) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quotelonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60000 60150 60300 60450 60600 60750 60900 61050 61200 61350 61500 61650 61800 61950 62100 62250 62400 62550 62700 62850 63000 63150 63300 63450 63600 63750 63900 64050 64200 64350 64500 64650 64800 64950 65100 65250 65400 65550 65700 65850 66000 66150 66300 66450 66600 66750 66900 67050 67200 67350 67500 67650 67800 67950 68100 68250 68400 68550 68700 68850 69000 69150 69300 69450 69600 69750 69900 70050 70200 70350 70500 70650 70800 70950 71100 71250 71400 71550 71700 71850 72000 72150 72300 72450 72600 72750 72900 73050 73200 73350 73500 73650 73800 73950 74100 74250 74400 74550 74700 74850 75000 75150 75300 75450 75600 75750 75900 76050 76200 76350 76500 76650 76800 76950 77100 77250 77400 77550 77700 77850 78000 78150 78300 78450 78600 78750 78900 79050 79200 79350 79500 79650 79800 79950 80100 80250 80400 80550 80700 80850 81000 81150 81300 81450 81600 81750 81900 82050 82200 82350 82500 82650 82800 82950 83100 83250 83400 83550 83700 83850 84000 84150 84300 84450 84600 84750 84900 85050 85200 85350 85500 85650 85800 85950 86100 86250 86400 86550 86700 86850 87000 87150 87300 87450 87600 87750 87900 88050 88200 88350 88500 88650 88800 88950 89100 89250 89400 89550 89700 89850 90000 90150 90300 90450 90600 90750 90900 91050 91200 91350 91500 91650 91800 91950 92100 92250 92400 92550 92700 92850 93000 93150 93300 93450 93600 93750 93900 94050 94200 94350 94500 94650 94800 94950 95100 95250 95400 95550 95700 95850 96000 96150 96300 96450 96600 96750 96900 97050 97200 97350 97500 97650 97800 97950 98100 98250 98400 98550 98700 98850 99000 99150 99300 99450 99600 99750 99900 100050 100200 100350 100500 100650 100800 100950 101100 101250 101400 101550 101700 101850 102000 102150 102300 102450 102600 102750 102900 103050 103200 103350 103500 103650 103800 103950 104100 104250 104400 104550 104700 104850 105000 105150 105300 105450 105600 105750 105900 106050 106200 106350 106500 106650 106800 106950 107100 107250 107400 107550 107700 107850 108000 108150 108300 108450 108600 108750 108900 109050 109200 109350 109500 109650 109800 109950 110100 110250 110400 110550 110700 110850 111000 111150 111300 111450 111600 111750 111900 112050 112200 112350 112500 112650 112800 112950 113100 113250 113400 113550 113700 113850 114000 114150 114300 114450 114600 114750 114900 115050 115200 115350 115500 115650 115800 115950 116100 116250 116400 116550 116700 116850 117000 117150 117300 117450 117600 117750 117900 118050 118200 118350 118500 118650 118800 118950 119100 119250 119400 119550 119700 119850 120850)) :ldur (quotelvel (quote ((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100))) :loffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6773) (6084) (6783) (6364) (6067) (6821) (6328) (6591) (6313) (6980) (6862) (6401) (6053) (6089) (6748) (6623) (6621) (6662) (6909) (6448) (6227) (6155) (6778) (6762) (6811) (6469) (6752) (6159) (6720) (6658) (6268) (6063) (6717) (6167) (6044) (6660) (6510) (6082) (6219) (6475) (6388) (6456) (6587) (6947) (6507) (6589) (6245) (6678) (6992) (6065) (6886) (6143) (6343) (6152) (6193) (6158) (6307) (6766) (6727) (6688) (6410) (6167) (6788) (6367) (6317) (6988) (6357) (6596) (6694) (6868) (6656) (6653) (6974) (6333) (6728) (6498) (6930) (6312) (6326) (6133) (6875) (6243) (6765) (6425) (6793) (6208) (6083) (6842) (6389) (6016) (6463) (6776) (6444) (6130) (6398) (6787) (6277) (6674) (6362) (6876) (6557) (6003) (6124) (6940) (6486) (6265) (6768) (6302) (6401) (6241) (6506) (6154) (6743) (6508) (6185) (6969) (6918) (6765) (6103) (6622) (6030) (6958) (6569) (6424) (6016) (6134) (6270) (6819) (6993) (6623) (6589) (6713) (6925) (6639) (6386) (6343) (6272) (6610) (6761) (6483) (6205) (6302) (6010) (6046) (6420) (6344) (6225) (6146) (6532) (6056) (6453) (6666) (6985) (6464) (6269) (6285) (6120) (6325) (6829) (6537) (6735) (6062) (6884) (6804) (6165) (6522) (6146) (6285) (6887) (6551) (6421) (6296) (6517) (6074) (6053) (6299) (6390) (6050) (6301) (6254) (6595) (6647) (6887) (6715) (6008) (6954) (6728) (6804) (6908) (6489) (6915) (6496) (6311) (6904) (6859) (6176) (6084) (6099) (6076) (6091) (6633) (6447) (6143) (6008) (6099) (6910) (6699) (6830) (6580) (6012) (6281) (6590) (6317) (6809) (6588) (6731) (6144) (6662) (6341) (6606) (6603) (6361) (6978) (6183) (6868) (6797) (6525) (6531) (6963) (6355) (6219) (6988) (6313) (6535) (6542) (6321) (6695) (6302) (6739) (6455) (6389) (6502) (6871) (6091) (6275) (6831) (6852) (6128) (6655) (6701) (6615) (6419) (6431) (6668) (6978) (6117) (6678) (6550) (6420) (6604) (6358) (6568) (6034) (6759) (6783) (6460) (6408) (6083) (6776) (6940) (6272) (6316) (6399) (6578) (6021) (6149) (6002) (6518) (6342) (6474) (6432) (6951) (6924) (6713) (6144) (6379) (6071) (6317) (6001) (6729) (6135) (6077) (6035) (6727) (6062) (6901) (6806) (6470) (6782) (6190) (6727) (6470) (6128) (6490) (6923) (6700) (6501) (6169) (6714) (6546) (6352) (6909) (6506) (6096) (6793) (6603) (6118) (6821) (6683) (6265) (6878) (6865) (6966) (6666) (6742) (6802) (6889) (6858) (6078) (6007) (6171) (6231) (6888) (6183) (6340) (6814) (6019) (6863) (6104) (6497) (6249) (6357) (6624) (6964) (6357) (6042) (6058) (6826) (6221) (6789) (6663) (6548) (6789) (6361) (6315) (6357) (6669) (6830) (6093) (6076) (6363) (6273) (6568) (6795) (6066) (6532) (6827) (6453) (6835) (6661) (6944) (6399) (6829) (6285) (6783) (6653) (6326) (6338) (6456) (6470) (6075) (6951) (6154) (6370) (6444) (6156) (6682) (6249) (6229) (6640) (6472) (6054) (6122) (6798) (6648) (6185) (6909) (6103) (6367) (6726))) :lonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60850)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 7.03 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200) (5000) (4700) (5800) (5100) (6000) (4500) (5800) (4800) (6000) (4300) (5200) (5600) (5200))) :lonset (quote (0 500 1000 1500 2000 2500 3000 3500 4000 4500 5000 5500 6000 6500 7000 7500 8000 8500 9000 9500 10000 10500 11000 11500 12000 12500 13000 13500 14000 14500 15000 15500 16000 16500 17000 17500 18000 18500 19000 19500 20000 20500 21000 21500 22000 22500 23000 23500 24000 24500 25000 25500 26000 26500 27000 27500 28000 28500 29000 29500 30000 30500 31000 31500 32000 32500 33000 33500 34000 34500 35000 35500 36000 36500 37000 37500 38000 38500 39000 39500 40000 40500 41000 41500 42000 42500 43000 43500 44000 44500 45000 45500 46000 46500 47000 47500 48000 48500 49000 49500 50000 50500 51000 51500 52000 52500 53000 53500 54000 54500 55000 55500 56000 56500 57000 57500 58000 58500 59000 59500 60000 60500 61000 61500 62000 62500 63000 63500 64000 64500 65000 65500 66000 66500 67000 67500 68000 68500 69000 69500 70000 70500 71000 71500 72000 72500 73000 73500 74000 74500 75000 75500 76000 76500 77000 77500 78000 78500 79000 79500 80000 80500 81000 81500 82000 82500 83000 83500 84000 84500 85000 85500 86000 86500 87000 87500 88000 88500 89000 89500 90000 90500 91000 91500 92000 92500 93000 93500 94000 94500 95000 95500 96000 96500 97000 97500 98000 98500 99000 99500 100000 100500 101000 101500 102000 102500 103000 103500 104000 104500 105000 105500 106000 106500 107000 107500 108000 108500 109000 109500 110000 110500 111000 111500 112000 112500 113000 113500 114000 114500 115000 115500 116000 116500 117000 117500 118000 118500 119000 119500 120000 120500 121000 121500 122000 122500 123000 123500 124000 124500 125000 125500 126000 126500 127000 127500 128000 128500 129000 129500 130000 130500 131000 131500 132000 132500 133000 133500 134000 134500 135000 135500 136000 136500 137000 137500 138000 138500 139000 139500 140000 140500 141000 141500 142000 142500 143000 143500 144000 144500 145000 145500 146000 146500 147000 147500 148000 148500 149000 149500 150000 150500 151000 151500 152000 152500 153000 153500 154000 154500 155000 155500 156000 156500 157000 157500 158000 158500 159000 159500 160000 160500 161000 161500 162000 163000)) :ldur (quotelvel (quote ((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9))) :legato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 7.03 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((1) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 7.03 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale onset measure)) (list 2 24 (list (quote g) (quote g) (quote g)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (2 2 2))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 1920 989) (om-make-point -8 -8) 0 1 (quote :normal) (quote t) nil 0 1)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "LispFunction" (quote ("elements" "LispFunction")) (quote ((om-load-inputfun (quote input-funbox) "" "ONE" nil) (om-load-inputfun (quote input-funbox) "" "TWO" nil) (om-load-inputfun (quote input-funbox) "" "THREE" nil))) (om-make-point 427 316) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ 3" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 1145 710) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quotelonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45850)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (measure onset scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 1 0 nil (quote t) (quote :normal) 1 0 (om-make-point -8 -8) (om-make-point 1920 989) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ 2" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 550 687) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quotelonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60850)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale onset measure)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :midi-player) 1 nil 1000 0 (om-make-point 766 239) (om-make-point 400 21) 0 1 (quote :normal) (quote t) nil 0 1)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 670 626) (om-make-point 26 28) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 583 629) (om-make-point 58 28) (list 0 150) "(0 150)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 1052 560) (om-make-point 110 28) (list 4800 5500 6000) "(4800 5500 6000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 154 150) (om-make-point 58 28) (list 0 150) "(0 150)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 0 84) (om-make-point 479 28) (list 7400 6600 7400 8300 7400 6600 7400 8300 7400 6600 7400 8300 7400 6600 7400 8300) "(7400 6600 7400 8300 7400 6600 7400 8300 7400 6600 7400 8300 7400 6600 7400 8300)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 169 301) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quotelonset (quote (0 150 300 450 600 750 900 1050 1200 1350 1500 1650 1800 1950 2100 2250 2400 2550 2700 2850 3000 3150 3300 3450 3600 3750 3900 4050 4200 4350 4500 4650 4800 4950 5100 5250 5400 5550 5700 5850 6000 6150 6300 6450 6600 6750 6900 7050 7200 7350 7500 7650 7800 7950 8100 8250 8400 8550 8700 8850 9000 9150 9300 9450 9600 9750 9900 10050 10200 10350 10500 10650 10800 10950 11100 11250 11400 11550 11700 11850 12000 12150 12300 12450 12600 12750 12900 13050 13200 13350 13500 13650 13800 13950 14100 14250 14400 14550 14700 14850 15000 15150 15300 15450 15600 15750 15900 16050 16200 16350 16500 16650 16800 16950 17100 17250 17400 17550 17700 17850 18000 18150 18300 18450 18600 18750 18900 19050 19200 19350 19500 19650 19800 19950 20100 20250 20400 20550 20700 20850 21000 21150 21300 21450 21600 21750 21900 22050 22200 22350 22500 22650 22800 22950 23100 23250 23400 23550 23700 23850 24000 24150 24300 24450 24600 24750 24900 25050 25200 25350 25500 25650 25800 25950 26100 26250 26400 26550 26700 26850 27000 27150 27300 27450 27600 27750 27900 28050 28200 28350 28500 28650 28800 28950 29100 29250 29400 29550 29700 29850 30000 30150 30300 30450 30600 30750 30900 31050 31200 31350 31500 31650 31800 31950 32100 32250 32400 32550 32700 32850 33000 33150 33300 33450 33600 33750 33900 34050 34200 34350 34500 34650 34800 34950 35100 35250 35400 35550 35700 35850 36000 36150 36300 36450 36600 36750 36900 37050 37200 37350 37500 37650 37800 37950 38100 38250 38400 38550 38700 38850 39000 39150 39300 39450 39600 39750 39900 40050 40200 40350 40500 40650 40800 40950 41100 41250 41400 41550 41700 41850 42000 42150 42300 42450 42600 42750 42900 43050 43200 43350 43500 43650 43800 43950 44100 44250 44400 44550 44700 44850 45000 45150 45300 45450 45600 45750 45900 46050 46200 46350 46500 46650 46800 46950 47100 47250 47400 47550 47700 47850 48000 48150 48300 48450 48600 48750 48900 49050 49200 49350 49500 49650 49800 49950 50100 50250 50400 50550 50700 50850 51000 51150 51300 51450 51600 51750 51900 52050 52200 52350 52500 52650 52800 52950 53100 53250 53400 53550 53700 53850 54000 54150 54300 54450 54600 54750 54900 55050 55200 55350 55500 55650 55800 55950 56100 56250 56400 56550 56700 56850 57000 57150 57300 57450 57600 57750 57900 58050 58200 58350 58500 58650 58800 58950 59100 59250 59400 59550 59700 59850 60000 60150 60300 60450 60600 60750 60900 61050 61200 61350 61500 61650 61800 61950 62100 62250 62400 62550 62700 62850 63000 63150 63300 63450 63600 63750 63900 64050 64200 64350 64500 64650 64800 64950 65100 65250 65400 65550 65700 65850 66000 66150 66300 66450 66600 66750 66900 67050 67200 67350 67500 67650 67800 67950 68100 68250 68400 68550 68700 68850 69000 69150 69300 69450 69600 69750 69900 70050 70200 70350 70500 70650 70800 70950 71100 71250 71400 71550 71700 71850 72000 72150 72300 72450 72600 72750 72900 73050 73200 73350 73500 73650 73800 73950 74100 74250 74400 74550 74700 74850 75000 75150 75300 75450 75600 75750 75900 76050 76200 76350 76500 76650 76800 76950 77100 77250 77400 77550 77700 77850 78000 78150 78300 78450 78600 78750 78900 79050 79200 79350 79500 79650 79800 79950 80100 80250 80400 80550 80700 80850 81000 81150 81300 81450 81600 81750 81900 82050 82200 82350 82500 82650 82800 82950 83100 83250 83400 83550 83700 83850 84000 84150 84300 84450 84600 84750 84900 85050 85200 85350 85500 85650 85800 85950 86100 86250 86400 86550 86700 86850 87000 87150 87300 87450 87600 87750 87900 88050 88200 88350 88500 88650 88800 88950 89100 89250 89400 89550 89700 89850 90000 90150 90300 90450 90600 90750 90900 91050 91200 91350 91500 91650 91800 91950 92100 92250 92400 92550 92700 92850 93000 93150 93300 93450 93600 93750 93900 94050 94200 94350 94500 94650 94800 94950 95100 95250 95400 95550 95700 95850 96000 96150 96300 96450 96600 96750 96900 97050 97200 97350 97500 97650 97800 97950 98100 98250 98400 98550 98700 98850 99000 99150 99300 99450 99600 99750 99900 100050 100200 100350 100500 100650 100800 100950 101100 101250 101400 101550 101700 101850 102000 102150 102300 102450 102600 102750 102900 103050 103200 103350 103500 103650 103800 103950 104100 104250 104400 104550 104700 104850 105000 105150 105300 105450 105600 105750 105900 106050 106200 106350 106500 106650 106800 106950 107100 107250 107400 107550 107700 107850 108000 108150 108300 108450 108600 108750 108900 109050 109200 109350 109500 109650 109800 109950 110100 110250 110400 110550 110700 110850 111000 111150 111300 111450 111600 111750 111900 112050 112200 112350 112500 112650 112800 112950 113100 113250 113400 113550 113700 113850 114000 114150 114300 114450 114600 114750 114900 115050 115200 115350 115500 115650 115800 115950 116100 116250 116400 116550 116700 116850 117000 117150 117300 117450 117600 117750 117900 118050 118200 118350 118500 118650 118800 118950 119100 119250 119400 119550 119700 119850 120850)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (measure onset scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 1 0 nil (quote t) (quote :normal) 1 0 (om-make-point 400 20) (om-make-point 963 393) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((1 0 0 0 nil 0) (4 0 1 0 nil 0) (3 0 2 1 nil 0) (0 0 5 1 nil 0) (7 0 6 0 nil 0) (42 0 7 0 nil 0) (12 0 11 0 nil 0) (40 0 12 0 nil 0) (15 0 14 1 nil 0) (37 0 15 0 nil 0) (18 0 15 1 nil 0) (36 0 15 2 nil 0) (19 0 18 1 nil 0) (17 0 18 2 nil 0) (16 0 18 6 nil 0) (20 0 19 0 nil 0) (24 0 20 0 nil 0) (23 0 22 0 nil 0) (21 0 23 0 nil 0) (30 0 31 0 nil 0) (29 0 31 1 nil 0) (33 0 32 1 nil 0) (27 0 32 2 nil 0) (26 0 32 6 nil 0) (31 0 33 0 nil 0) (28 0 33 1 nil 0) (35 0 34 1 nil 0) (43 0 35 0 nil 0) (32 0 35 1 nil 0) (5 0 35 2 nil 0) (11 0 36 1 nil 0) (10 0 36 2 nil 0) (9 0 36 6 nil 0) (22 0 37 1 nil 0) (39 0 37 2 nil 0) (38 0 37 6 nil 0) (6 0 43 1 nil 0) (41 0 43 2 nil 0) (25 0 43 6 nil 0))) nil 7.03))