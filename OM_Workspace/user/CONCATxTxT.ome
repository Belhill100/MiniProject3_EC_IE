; OM File Header - Saved 2024/09/26 12:01:48
; (7.03 :meth (om-make-point 24 24) (om-make-point 50 50) (om-make-point 500 400) "" 230 0 "2024/09/26 12:01:48" "2024/09/26 12:01:48")
; End File Header
(in-package :om)(load-lib-for-first (quote nil))(om-load-method-ws2 (quote concat) 230 "Concatenates two music sequences into a new one.$$Optional input 's2-offset' may be used to pass an (absolute) offset value for s2.  s2-offset is expressed ms.$$Type of the return value :$ voice x voice   => Voice$ measure x voice => Voice$ voice x measure => Voice$ multi-seq x multi-seq => multi-seq$ chord-seq x chord-seq => chord-seq$ poly x poly => poly$" (quote ((let ((box (om-load-boxout "output" 0 (om-make-point 5 240) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxtypein "s2-offset" (quote t) 2 (om-make-point 105 45) "no documentation" (quote &optional) (quote t) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxtypein "s2" (quote t) 1 (om-make-point 55 45) "no documentation" (quote nil) (quote t) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxtypein "s1" (quote t) 0 (om-make-point 5 45) "no documentation" (quote nil) (quote t) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) (quote ((s1 t) (s2 t) &optional (s2-offset t))) (quote ((quote t) (quote t) (quote t))) (quote ("no documentation" "no documentation" "no documentation")) (quote nil) (quote nil) 1 nil (quote ("2024/09/26 12:01:48" "2024/09/26 12:01:48")))